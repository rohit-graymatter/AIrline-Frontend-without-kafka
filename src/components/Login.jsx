import React, { useState } from "react";
import {
Â  Box,
Â  Typography,
Â  TextField,
Â  Button,
Â  Tabs,
Â  Tab,
Â  InputAdornment,
Â  MenuItem,
Â  useMediaQuery // Import useMediaQuery hook
} from "@mui/material";
import { motion, AnimatePresence } from "framer-motion";
import { Email, Lock, Person } from "@mui/icons-material";
import f1 from "../assets/f1.jpg";
import f2 from "../assets/f2.jpg";
import f3 from "../assets/f3.jpg";
import { useAuth } from "../context/AuthContext";
import { useNavigate } from "react-router-dom";

const Login = () => {
Â  const [isRegister, setIsRegister] = useState(false);
Â  const [form, setForm] = useState({
Â  Â  name: "",
Â  Â  email: "",
Â  Â  password: "",
Â  Â  role: "passenger",
Â  });
Â  const [loading, setLoading] = useState(false);
Â  const [error, setError] = useState("");

Â  const { login, register } = useAuth(); // ðŸ‘ˆ use context methods
Â  const navigate = useNavigate();
Â  const isSmallScreen = useMediaQuery('(max-width:599.95px)'); // Checks for screens smaller than 'sm' breakpoint

Â  const handleChange = (e) => {
Â  Â  setForm({ ...form, [e.target.name]: e.target.value });
Â  };

Â  const handleSubmit = async () => {
Â  Â  setLoading(true);
Â  Â  setError("");
Â  Â  try {
Â  Â  Â  if (isRegister) {
Â  Â  Â  Â  await register(form.name, form.email, form.password, form.role);
Â  Â  Â  Â  await login(form.email, form.password); // auto login after signup
Â  Â  Â  } else {
Â  Â  Â  Â  await login(form.email, form.password);
Â  Â  Â  }

Â  Â  Â  navigate("/"); // ðŸ‘ˆ redirect after login
Â  Â  } catch (err) {
Â  Â  Â  setError(err.response?.data?.error || "Something went wrong");
Â  Â  } finally {
Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <Box
Â  Â  Â  sx={{
Â  Â  Â  Â  height: "100vh",
Â  Â  Â  Â  width: "100%",
Â  Â  Â  Â  backgroundImage: `url(${f1})`,
Â  Â  Â  Â  backgroundSize: "cover",
Â  Â  Â  Â  backgroundPosition: "center",
Â  Â  Â  Â  display: "flex",
Â  Â  Â  Â  alignItems: "center",
Â  Â  Â  Â  justifyContent: "center",
Â  Â  Â  Â  p: { xs: 1, sm: 0 } // Add slight padding on very small screens
Â  Â  Â  }}
Â  Â  >
Â  Â  Â  {/* Main Box */}
Â  Â  Â  <Box
Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  display: "flex",
Â  Â  Â  Â  Â  flexDirection: { xs: "column", sm: "row" }, // Stack vertically on small screens
Â  Â  Â  Â  Â  width: { xs: "95%", sm: "85%" }, // Wider on small screens, adjust to 85% on larger
Â  Â  Â  Â  Â  maxWidth: 900,
Â  Â  Â  Â  Â  height: { xs: "auto", sm: 550 }, // Auto height on small screens, fixed on larger
Â  Â  Â  Â  Â  minHeight: { xs: 500, sm: 'auto' }, // Minimum height for forms on small screens
Â  Â  Â  Â  Â  borderRadius: "20px",
Â  Â  Â  Â  Â  overflow: "hidden",
Â  Â  Â  Â  Â  backgroundColor: "rgba(255,255,255,0.1)",
Â  Â  Â  Â  Â  backdropFilter: "blur(6px)",
Â  Â  Â  Â  Â  boxShadow: "0 10px 25px rgba(0,0,0,0.3)",
Â  Â  Â  Â  }}
Â  Â  Â  >
Â  Â  Â  Â  {/* Left Side: Form */}
Â  Â  Â  Â  <Box
Â  Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  Â  flex: { xs: 1, sm: 1 }, // Take full width on small screens
Â  Â  Â  Â  Â  Â  width: { xs: "100%", sm: "50%" }, // Ensure width explicitly for responsiveness
Â  Â  Â  Â  Â  Â  p: { xs: 2, sm: 5 }, // Less padding on small screens
Â  Â  Â  Â  Â  Â  display: "flex",
Â  Â  Â  Â  Â  Â  flexDirection: "column",
Â  Â  Â  Â  Â  Â  justifyContent: "center",
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {/* Tabs */}
Â  Â  Â  Â  Â  <Tabs value={isRegister ? 1 : 0}>
Â  Â  Â  Â  Â  Â  <Tab label="Login" onClick={() => setIsRegister(false)} />
Â  Â  Â  Â  Â  Â  <Tab label="Sign Up" onClick={() => setIsRegister(true)} />
Â  Â  Â  Â  Â  </Tabs>

Â  Â  Â  Â  Â  <AnimatePresence mode="wait">
Â  Â  Â  Â  Â  Â  {!isRegister ? (
Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  key="login-form"
Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, x: -20 }}
Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, x: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0, x: 20 }}
Â  Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.5 }}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <Typography variant="h5" fontWeight="bold" mt={2} mb={2}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Welcome to Airline
Â  Â  Â  Â  Â  Â  Â  Â  </Typography>

Â  Â  Â  Â  Â  Â  Â  Â  {error && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Typography color="error" variant="body2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {error}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </Typography>
Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Email"
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="email"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.email}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  InputProps={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  startAdornment: (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <InputAdornment position="start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Email />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </InputAdornment>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ),
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.password}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  InputProps={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  startAdornment: (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <InputAdornment position="start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Lock />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </InputAdornment>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ),
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="contained"
Â  Â  Â  Â  Â  Â  Â  Â  Â  sx={{ mt: 3, py: 1.2, borderRadius: "25px" }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleSubmit}
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {loading ? "Logging in..." : "Login"}
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  Â  Â  Â  key="register-form"
Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, x: 20 }}
Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, x: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0, x: -20 }}
Â  Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.5 }}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <Typography variant="h5" fontWeight="bold" mt={2} mb={2}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Create Account
Â  Â  Â  Â  Â  Â  Â  Â  </Typography>

Â  Â  Â  Â  Â  Â  Â  Â  {error && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <Typography color="error" variant="body2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {error}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </Typography>
Â  Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  InputProps={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  startAdornment: (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <InputAdornment position="start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Person />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </InputAdornment>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ),
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Email"
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="email"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.email}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  InputProps={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  startAdornment: (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <InputAdornment position="start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Email />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </InputAdornment>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ),
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.password}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  InputProps={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  startAdornment: (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <InputAdornment position="start">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Lock />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </InputAdornment>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ),
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  />

Â  Â  Â  Â  Â  Â  Â  Â  {/* Role Selector */}
Â  Â  Â  Â  Â  Â  Â  Â  <TextField
Â  Â  Â  Â  Â  Â  Â  Â  Â  select
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  margin="normal"
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="role"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={form.role}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  label="Role"
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <MenuItem value="passenger">Passenger</MenuItem>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <MenuItem value="admin">Admin</MenuItem>
Â  Â  Â  Â  Â  Â  Â  Â  </TextField>

Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  fullWidth
Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="contained"
Â  Â  Â  Â  Â  Â  Â  Â  Â  sx={{ mt: 3, py: 1.2, borderRadius: "25px" }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={handleSubmit}
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {loading ? "Signing up..." : "Sign Up"}
Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </AnimatePresence>
Â  Â  Â  Â  </Box>

Â  Â  Â  Â  {/* Right Side: Animated Image */}
Â  Â  Â  Â  <Box
Â  Â  Â  Â  Â  sx={{
Â  Â  Â  Â  Â  Â  width: { xs: "0%", sm: "50%" }, // Hide on small screens, 50% on larger
Â  Â  Â  Â  Â  Â  position: "relative",
Â  Â  Â  Â  Â  Â  display: { xs: "none", sm: "block" } // Explicitly hide on small, show on large
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <AnimatePresence mode="wait">
Â  Â  Â  Â  Â  Â  {isRegister ? (
Â  Â  Â  Â  Â  Â  Â  <motion.img
Â  Â  Â  Â  Â  Â  Â  Â  key="register-img"
Â  Â  Â  Â  Â  Â  Â  Â  src={f3}
Â  Â  Â  Â  Â  Â  Â  Â  alt="Register Illustration"
Â  Â  Â  Â  Â  Â  Â  Â  style={{ width: "100%", height: "100%", objectFit: "cover" }}
Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, x: 100 }}
Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, x: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0, x: -100 }}
Â  Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.6 }}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <motion.img
Â  Â  Â  Â  Â  Â  Â  Â  key="login-img"
Â  Â  Â  Â  Â  Â  Â  Â  src={f2}
Â  Â  Â  Â  Â  Â  Â  Â  alt="Login Illustration"
Â  Â  Â  Â  Â  Â  Â  Â  style={{ width: "100%", height: "100%", objectFit: "cover" }}
Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, x: -100 }}
Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, x: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  exit={{ opacity: 0, x: 100 }}
Â  Â  Â  Â  Â  Â  Â  Â  transition={{ duration: 0.6 }}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </AnimatePresence>
Â  Â  Â  Â  </Box>
Â  Â  Â  </Box>
Â  Â  </Box>
Â  );
};

export default Login;
